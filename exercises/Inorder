Given a binary tree, return the inorder traversal of its nodes' values.

For example:
Given binary tree {1,#,2,3}, return [1,3,2].

/**

 * Definition for a binary tree node.

 * public class TreeNode {

 *     int val;

 *     TreeNode left;

 *     TreeNode right;

 *     TreeNode(int x) { val = x; }

 * }

 */

public class Solution {

    public List<Integer> inorderTraversal(TreeNode root) {

        ArrayList<Integer> list = new ArrayList<Integer>();

        

        if(root == null){

            return list;

        }

 

        Stack<TreeNode> stack = new Stack<TreeNode>();

        TreeNode r = root;

 

        while(!stack.empty() || r != null){

            if(r != null){

                stack.push(r);

                r = r.left;

            }else{

                TreeNode t = stack.pop();

                list.add(t.val);

                r = t.right;

            }

        }

        return list;

 

    }

}
